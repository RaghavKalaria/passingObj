trigger: 
- master

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: V1 # Rename to whatever you named your variable group in the prerequisite stage of step 6

stages:
  - stage: Run_and_publish_unit_tests
    jobs:
      - job:
        steps:
          - task: TfxInstaller@4
            inputs:
              version: "v0.x"
          - task: CmdLine@2
            inputs:
              script: |
                pwd
                ls -a
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask' # Update to the name of the directory of your task
          - task: Bash@3
            displayName: Compile Javascript
            inputs:
              targetType: "inline"
              script: |
                cd buildandreleasetask # Update to the name of the directory of your task
                tsc
                
  - stage: Package_extension_and_publish_build_artifacts
    jobs:
      - job:
        steps:
          - task: TfxInstaller@4
            inputs:
              version: "0.x"
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask' # Update to the name of the directory of your task
          - task: Bash@3
            displayName: Compile Javascript
            inputs:
              targetType: "inline"
              script: |
                cd buildandreleasetask # Update to the name of the directory of your task
                tsc
          - task: QueryAzureDevOpsExtensionVersion@4
            name: QueryVersion
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'CIServiceConnection' # Change to whatever you named the service connection
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              versionAction: 'Patch'
          - task: PackageAzureDevOpsExtension@4
            inputs:
              rootFolder: '$(System.DefaultWorkingDirectory)'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              extensionVersion: '$(QueryVersion.Extension.Version)'
              updateTasksVersion: true
              updateTasksVersionType: 'patch'
              extensionVisibility: 'private' # Change to public if you're publishing to the marketplace
              extensionPricing: 'free'
          - task: CopyFiles@2
            displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
            inputs:
              Contents: "**/*.vsix"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(ArtifactName)'
              publishLocation: 'Container'
  - stage: Download_build_artifacts_and_publish_the_extension
    jobs:
      - job:
        steps:
          - task: TfxInstaller@4
            inputs:
              version: "v0.x"
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "$(ArtifactName)"
              downloadPath: "$(System.DefaultWorkingDirectory)"
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                printf '$(PAT)' |tfx extension publish --manifest-globs vss-extension.json --share-with RKtrialMS
          